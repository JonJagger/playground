services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - "4580:80"
    volumes: 
      - ./reverse-proxy:/etc/nginx/conf.d/
    develop:
      watch:
        - action: sync+restart
          path: ./reverse-proxy
          target: /etc/nginx/conf.d/

  alpha:
    build:
      context: ./alpha
    image: ${ALPHA_IMAGE}
    container_name: ${ALPHA_CONTAINER_NAME}
    user: ${ALPHA_USER}
    env_file: [ .env ]
    ports: [ "${ALPHA_PORT}:${ALPHA_PORT}" ]
    read_only: true
    restart: "no"
    volumes:
      - ./alpha/test:/app/test/:ro
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777
          size: 10485760  # 10MB
    develop:
      watch:
        - action: rebuild
          path: ./alpha

  beta:
    build:
      context: ./beta
    image: ${BETA_IMAGE}
    container_name: ${BETA_CONTAINER_NAME}
    user: ${BETA_USER}
    env_file: [ .env ]
    ports: [ "${BETA_PORT}:${BETA_PORT}" ]
    read_only: true
    restart: "no"
    volumes:
      - ./beta/test:/app/test/:ro
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777
          size: 10485760  # 10MB
    develop:
      watch:
        - action: rebuild
          path: ./beta
  webapp:
    build: webapp
    ports:
      - "4502:4502"
    volumes:
      - ./webapp:/app
      - /app/node_modules