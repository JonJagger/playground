name: Build alpha on main

on:
  push:
    branches:
      - main
    paths:
      - alpha/**
      - .github/workflows/alpha_main.yml

env:
  DOCKER_REGISTRY: ghcr.io
  GITHUB_ORG_NAME: kosli-dev
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  SERVICE_NAME: alpha


jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.variables.outputs.image_tag }}
      image_name: ${{ steps.variables.outputs.image_name }}
      tagged_image_previous: ${{ steps.variables.outputs.tagged_image_previous }}
      image_tar_filename: ${{ steps.variables.outputs.image_tar_filename }}
    steps:

#      - uses: actions/checkout@v4.1.1
#        with:
#          fetch-depth: 2

      - name: Set outputs
        id: variables
        run: |
          image_tag="${GITHUB_SHA:0:7}"
          # image_tag_previous=$(git rev-parse --short=7 HEAD^)
          image_uri="${{ env.DOCKER_REGISTRY }}/${{ env.GITHUB_ORG_NAME }}/${{ github.event.repository.name }}-${{ env.SERVICE_NAME }}"
          image_name="${image_uri}:${image_tag}"
          tagged_image_previous="${image_uri}:previous"
          # image_tar_filename="/tmp/${{ github.event.repository.name }}-${{ env.SERVICE_NAME }}:${{ github.sha }}.tar"
          image_tar_filename="/tmp/${{ github.event.repository.name }}-${{ env.SERVICE_NAME }}:previous.tar"
            
          echo "image_tag=${image_tag}" >> ${GITHUB_OUTPUT}          
          echo "image_name=${image_name}" >> ${GITHUB_OUTPUT}          
          echo "tagged_image_previous=${tagged_image_previous}" >> ${GITHUB_OUTPUT}
          echo "image_tar_filename=${image_tar_filename}" >> ${GITHUB_OUTPUT}


  build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [setup]
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker image to the GHCR
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.SERVICE_NAME }}
        push: true
        tags: ${{ needs.setup.outputs.image_name }}
        cache-from: type=registry,ref=${{ needs.setup.outputs.tagged_image_previous }}
        cache-to: type=inline,mode=max

    - name: Tar Docker image
      run: |
        docker pull ${{ needs.setup.outputs.image_name }}          
        docker image save ${{ needs.setup.outputs.image_name }} --output ${{ needs.setup.outputs.image_tar_filename }}

    - name: Cache Docker image
      uses: actions/cache@v4.0.0
      with:
        path: ${{ needs.setup.outputs.image_tar_filename }}
        key: ${{ needs.setup.outputs.image_name }}
